from PIL import Image
import os
from pathlib import Path

# Путь к корневой папке
root_folder = r"C:\Users\User\Desktop\Летний лагерь\img"

# Поддерживаемые форматы изображений
image_extensions = ('.png', '.jpg', '.jpeg', '.webp')

# Качество для оптимизации (0-100, 100 - без потерь)
QUALITY = 85

def optimize_image(file_path):
    try:
        # Открываем изображение
        with Image.open(file_path) as img:
            # Конвертируем в RGB, если изображение в формате PNG с прозрачностью
            if img.mode in ('RGBA', 'LA'):
                background = Image.new('RGB', img.size, (255, 255, 255))
                background.paste(img, mask=img.split()[-1])
                img = background
            else:
                img = img.convert('RGB')

            # Сохраняем оптимизированное изображение с тем же именем
            output_path = file_path
            if file_path.suffix.lower() in ('.png', '.webp'):
                # Для PNG и WebP сохраняем как JPEG
                output_path = file_path.with_suffix('.jpg')
                img.save(output_path, 'JPEG', quality=QUALITY, optimize=True)
                # Удаляем оригинал, если формат изменился
                if output_path != file_path:
                    os.remove(file_path)
            else:
                # Для JPEG сохраняем как есть
                img.save(output_path, 'JPEG', quality=QUALITY, optimize=True)
            print(f"Оптимизировано: {file_path}")
    except Exception as e:
        print(f"Ошибка при обработке {file_path}: {e}")

def process_images(folder_path):
    # Рекурсивно обходим папки
    for path in Path(folder_path).rglob('*'):
        if path.is_file() and path.suffix.lower() in image_extensions:
            optimize_image(path)

if __name__ == "__main__":
    if not os.path.exists(root_folder):
        print(f"Папка {root_folder} не существует")
    else:
        print(f"Обработка изображений в {root_folder}")
        process_images(root_folder)
        print("Оптимизация завершена")